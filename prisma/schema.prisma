// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
   id Int @id @default(autoincrement())
   firstName String
   lastName  String?
   email  String  @unique
   password String
   bio String?
   profilePicture String
   createdAt DateTime @default(now())
   post Post[]
   comment Comment[] @relation("CommentAuthor")
   friends Friendship[] @relation("UserFriends")
   messageSent Message[]@relation("SentMessages")
   messageReceive Message[]@relation("ReceivedMessages")
   updatedAt   DateTime  @default(now()) @updatedAt

}

model Post{
  id Int @id @default(autoincrement())
  content String
  mediaType String
  mediaUrl String
  author   User @relation(fields: [authorId], references: [id])
  authorId Int
  comment Comment[] @relation("PostComments")
  updatedAt   DateTime  @default(now()) @updatedAt
  createdAt DateTime @default(now())

}

model Comment{
  id Int @id @default(autoincrement())
  content String
  post Post @relation("PostComments",fields: [postId], references: [id])
  postId Int

  author User @relation("CommentAuthor",fields: [authorId], references: [id])
  authorId Int

  updateAt DateTime @default(now()) @updatedAt
  createdAt DateTime @default(now())

  

  parent      Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
  parentId    Int?
  replies     Comment[] @relation("CommentReplies")

}

model Friendship {
  id         Int     @id @default(autoincrement())
  userId     Int
  friendId   Int
  user User @relation("UserFriends",fields: [userId],references: [id])
  friend User @relation("UserFriends",fields: [friendId],references: [id])
  createdAt  DateTime @default(now())
}
model Message{
  id Int @id @default(autoincrement())
  senderId Int
  receiverId Int
  content String
  sentAt DateTime @default(now())
  sender User @relation("SentMessages",fields: [senderId],references: [id])
  receiver User @relation("ReceivedMessages",fields: [receiverId],references: [id])
}



